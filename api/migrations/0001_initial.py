# Generated by Django 5.2 on 2025-05-05 23:32

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Guia",
            fields=[
                ("updatedAt", models.DateField(auto_created=True, auto_now=True)),
                ("createdAt", models.DateField(auto_created=True, auto_now=True)),
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("trackingNumber", models.CharField(max_length=15)),
                ("origin", models.CharField(max_length=100)),
                ("destination", models.CharField(max_length=100)),
                ("currentStatus", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "Guide",
            },
        ),
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updatedAt", models.DateField(auto_created=True, auto_now=True)),
                ("createdAt", models.DateField(auto_created=True, auto_now=True)),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("name", models.CharField(max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "User",
            },
        ),
        migrations.CreateModel(
            name="Estatus",
            fields=[
                ("timestamp", models.DateTimeField(auto_created=True, auto_now=True)),
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("status", models.CharField(max_length=20)),
                ("updatedBy", models.CharField(max_length=20)),
                (
                    "guide",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.guia"
                    ),
                ),
            ],
            options={
                "db_table": "StatusHistory",
            },
        ),
    ]
